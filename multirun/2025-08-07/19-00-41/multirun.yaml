hydra:
  run:
    dir: outputs/${now:%Y-%m-%d}/${now:%H-%M-%S}
  sweep:
    dir: multirun/${now:%Y-%m-%d}/${now:%H-%M-%S}
    subdir: ${hydra.job.num}
  launcher:
    _target_: hydra_plugins.hydra_joblib_launcher.joblib_launcher.JoblibLauncher
    n_jobs: -1
    backend: null
    prefer: processes
    require: null
    verbose: 0
    timeout: null
    pre_dispatch: 2*n_jobs
    batch_size: auto
    temp_folder: null
    max_nbytes: null
    mmap_mode: r
  sweeper:
    _target_: hydra._internal.core_plugins.basic_sweeper.BasicSweeper
    max_batch_size: null
    params: null
  help:
    app_name: ${hydra.job.name}
    header: '${hydra.help.app_name} is powered by Hydra.

      '
    footer: 'Powered by Hydra (https://hydra.cc)

      Use --hydra-help to view Hydra specific help

      '
    template: '${hydra.help.header}

      == Configuration groups ==

      Compose your configuration from those groups (group=option)


      $APP_CONFIG_GROUPS


      == Config ==

      Override anything in the config (foo.bar=value)


      $CONFIG


      ${hydra.help.footer}

      '
  hydra_help:
    template: 'Hydra (${hydra.runtime.version})

      See https://hydra.cc for more info.


      == Flags ==

      $FLAGS_HELP


      == Configuration groups ==

      Compose your configuration from those groups (For example, append hydra/job_logging=disabled
      to command line)


      $HYDRA_CONFIG_GROUPS


      Use ''--cfg hydra'' to Show the Hydra config.

      '
    hydra_help: ???
  hydra_logging:
    version: 1
    formatters:
      simple:
        format: '[%(asctime)s][HYDRA] %(message)s'
    handlers:
      console:
        class: logging.StreamHandler
        formatter: simple
        stream: ext://sys.stdout
    root:
      level: INFO
      handlers:
      - console
    loggers:
      logging_example:
        level: DEBUG
    disable_existing_loggers: false
  job_logging:
    version: 1
    formatters:
      simple:
        format: '[%(asctime)s][%(name)s][%(levelname)s] - %(message)s'
    handlers:
      console:
        class: logging.StreamHandler
        formatter: simple
        stream: ext://sys.stdout
      file:
        class: logging.FileHandler
        formatter: simple
        filename: ${hydra.runtime.output_dir}/${hydra.job.name}.log
    root:
      level: INFO
      handlers:
      - console
      - file
    disable_existing_loggers: false
  env: {}
  mode: MULTIRUN
  searchpath: []
  callbacks: {}
  output_subdir: null
  overrides:
    hydra:
    - hydra.mode=MULTIRUN
    task:
    - worker=1
    - input_dir=/home/dan/uw_mortality_prediction_omop_data/evaluation_small_meds/data
    - output_dir=/home/dan/uw_mortality_prediction_omop_data/evaluation_small_ethos
    - out_fn=train
  job:
    name: run_tokenization
    chdir: null
    override_dirname: input_dir=/home/dan/uw_mortality_prediction_omop_data/evaluation_small_meds/data,out_fn=train,output_dir=/home/dan/uw_mortality_prediction_omop_data/evaluation_small_ethos,worker=1
    id: ???
    num: ???
    config_name: tokenization
    env_set: {}
    env_copy: []
    config:
      override_dirname:
        kv_sep: '='
        item_sep: ','
        exclude_keys: []
  runtime:
    version: 1.3.2
    version_base: '1.3'
    cwd: /home/dan/Dropbox/A_NIH_JOB/ethos-ares
    config_sources:
    - path: hydra.conf
      schema: pkg
      provider: hydra
    - path: ethos.configs
      schema: pkg
      provider: main
    - path: ''
      schema: structured
      provider: schema
    output_dir: ???
    choices:
      dataset: mimic
      hydra/env: default
      hydra/callbacks: null
      hydra/job_logging: default
      hydra/hydra_logging: default
      hydra/hydra_help: default
      hydra/help: default
      hydra/sweeper: basic
      hydra/launcher: joblib
      hydra/output: default
  verbose: false
input_dir: /home/dan/uw_mortality_prediction_omop_data/evaluation_small_meds/data
output_dir: /home/dan/uw_mortality_prediction_omop_data/evaluation_small_ethos
out_fn: train
vocab: null
num_quantiles: 10
code_counts_fn: code_counts.csv
quantiles_fn: quantiles.json
intervals_fn: interval_estimates.json
time_intervals_spec:
  5m-15m:
    minutes: 5
  15m-45m:
    minutes: 15
  45m-1h15m:
    minutes: 45
  1h15m-2h:
    hours: 1
    minutes: 15
  2h-3h:
    hours: 2
  3h-5h:
    hours: 3
  5h-8h:
    hours: 5
  8h-12h:
    hours: 8
  12h-18h:
    hours: 12
  18h-1d:
    hours: 18
  1d-2d:
    days: 1
  2d-4d:
    days: 2
  4d-7d:
    days: 4
  7d-12d:
    days: 7
  12d-20d:
    days: 12
  20d-30d:
    days: 20
  30d-2mt:
    days: 30
  2mt-6mt:
    days: 60
  =6mt:
    days: 180
worker: 1
dataset:
  name: mimic
  stages:
  - name: filter_codes
    params:
      codes_to_remove:
      - INFUSION_
      - SUBJECT_WEIGHT_AT_INFUSION
      - Weight
      - Height
      - eGFR
      - PROCEDURE//START
      - PROCEDURE//END
      - MEDICATION//START//
      - SUBJECT_FLUID_OUTPUT//
      is_prefix: true
  - name: preprocessing
    transforms:
    - LabData.retain_only_test_with_numeric_result
    - TransferData.retain_only_transfer_and_admit_types
    - DemographicData.retrieve_demographics_from_hosp_adm
    - DemographicData.process_race
    - DemographicData.process_marital_status
    - InpatientData.process_drg_codes
    - InpatientData.process_hospital_admissions
    - InpatientData.process_hospital_discharges
    - HCPCSData.unify_names
    vocab: ${vocab}
  - name: CodeCounter
    agg_to: ${output_dir}/${code_counts_fn}
    skip: ${is_not_null:${vocab}}
  - name: preprocessing_with_counts
    transforms:
    - LabData.make_quantiles
    params:
      counts: ${output_dir}/${code_counts_fn}
    vocab: ${vocab}
  - name: preprocessing
    transforms:
    - DeathData.place_death_before_dc_if_same_time
    - PatientFluidOutputData.make_quantiles
    - BMIData.make_quantiles
    - EdData.process_ed_registration
    - EdData.process_ed_acuity
    - MeasurementData.process_simple_measurements
    - MeasurementData.process_pain
    - MeasurementData.process_blood_pressure
    vocab: ${vocab}
  - name: preprocessing_with_num_quantiles
    transforms:
    - ICUStayData.process
    params:
      num_quantiles: ${num_quantiles}
    vocab: ${vocab}
  - name: Quantizator
    params:
      code_prefixes:
      - LAB//Q//
      - BMI//Q
      - VITAL//Q//
      - SUBJECT_FLUID_OUTPUT//Q//
    agg_to: ${output_dir}/${quantiles_fn}
    agg_params:
      num_quantiles: ${num_quantiles}
    skip: ${is_not_null:${vocab}}
  - name: transform_to_quantiles
    params:
      code_quantiles: ${default_if_null:${vocab},${output_dir}}/${quantiles_fn}
  - name: preprocessing
    transforms:
    - BMIData.join_token_and_quantile
    - DiagnosesData.prepare_codes_for_processing
    - DiagnosesData.convert_icd_9_to_10
    - DiagnosesData.process_icd10
    - ProcedureData.prepare_codes_for_processing
    - ProcedureData.convert_icd_9_to_10
    - ProcedureData.process_icd10
    - MedicationData.convert_to_atc
    vocab: ${vocab}
  - name: StaticDataCollector
    agg_to: ${output_dir}/static_data.pickle
    params:
      static_code_prefixes:
      - MEDS_BIRTH
      - GENDER
      - MARITAL
      - RACE
      - BMI
  - name: filter_codes
    params:
      codes_to_remove:
      - MEDS_BIRTH
      - GENDER
      - MARITAL
      - RACE
      is_prefix: true
  - name: inject_time_intervals
    params:
      time_intervals_spec: ${time_intervals_spec}
  - name: IntervalEstimator
    params:
      time_intervals_spec: ${time_intervals_spec}
    agg_to: ${output_dir}/${intervals_fn}
    skip: ${is_not_null:${vocab}}
  - name: CodeCounter
    agg_to: ${output_dir}/${code_counts_fn}
